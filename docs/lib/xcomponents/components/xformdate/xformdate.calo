asigno xcomponents_components.xformdate como un componente vue2 con nombre "xformdate" con plantilla {
  <div class="Component xformdate">
    <div class="form_group">
      <div class="form_group_label">
        <slot></slot>
      </div>
      <div style="position: relative; background-color: #222; color: white;">
        <xtable style="width:100%;">
          <xtablebody>
            <xtablerow>
              <xtablecell>
                <button style="min-width: auto;" v-on:click="() => esta_mostrando_calendario = !esta_mostrando_calendario">üóì</button>
              </xtablecell>
              <xtablecell style="white-space: nowrap; width:100%;">
                <input type="text" v-model="value" style="text-align: left; width: 100%;" disabled="true" />
              </xtablecell>
            </xtablerow>
            <xtablerow v-if="esta_mostrando_calendario">
              <xtablecell colspan="100" style="max-width: 220px;">
                <VuejsCalendario mode="date" :initial-value="value" :on-change="v => value = v"></VuejsCalendario>
              </xtablecell>
            </xtablerow>
          </xtablebody>
        </xtable>
      </div>
    </div>
  </div>
} con l√≥gica {
  retorno {
    propiedad props como {
      propiedad initialValue como {
        propiedad type como String.
        propiedad default como una funci√≥n donde retorno "".
      }.
      propiedad onChange como {
        propiedad type como Function.
        propiedad default como una funci√≥n.
      }.
      propiedad placeholder como {
        propiedad type como String.
        propiedad default como una funci√≥n donde retorno "".
      }.
      propiedad min como {
        propiedad type como Number.
        propiedad default como una funci√≥n donde retorno 0.
      }.
      propiedad max como {
        propiedad type como Number.
        propiedad default como una funci√≥n donde retorno 100.
      }.
      propiedad step como {
        propiedad type como Number.
        propiedad default como una funci√≥n donde retorno 10.
      }.
    }.
    m√©todo data donde {
      retorno {
        esta_mostrando_calendario: false,
        value: this.initialValue
      }.
    }.
    propiedad methods como {}.
    propiedad watch como {
      m√©todo value con (nuevo_valor) donde {
        hago this.onChange(nuevo_valor, this).
      }.
    }.
    propiedad computed como {}.
    m√©todo beforeCreate donde {}.
    m√©todo created donde {}.
    m√©todo beforeMount donde {}.
    m√©todo mounted donde {}.
    m√©todo beforeUpdate donde {}.
    m√©todo updated donde {}.
    m√©todo beforeUnmount donde {}.
    m√©todo unmounted donde {}.
    m√©todo activated donde {}.
    m√©todo deactivated donde {}.
  }.
}.